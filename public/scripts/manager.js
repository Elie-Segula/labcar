// Roots.
const PATH_SEARCH = '/get/search';
const PATH_UPDATE = '/post/update';
// Requests timer (in milli).
const TIMER_SEARCH = 1 * 1000;
const TIMER_UPDATE = 2 * 1000;
// Car's statue.
const UNAVAILABLE = 0;
const WAITING = 1;
const NAVIGATING = 2;
// Car's info.
const CAR_ID = 42;
var carState = UNAVAILABLE;
// todo
var randomGpsCounter = 0;
const RANDOM_GPS_COUNTER_MAX = 10 * 2;
var latLngIndex = 0;
/*const SPEED = 5;
const LAT_LNG_SIZE = 75;
const latLngs = [
    [48.60295898, 0.91232817],
    [48.60295261, 0.91231851],
    [48.60294637, 0.91230867],
    [48.60294038, 0.91229854],
    [48.60293466, 0.91228808],
    [48.60292931, 0.91227737],
    [48.60292411, 0.91226597],
    [48.60291942, 0.91225467],
    [48.60291493, 0.91224278],
    [48.60291081, 0.91223075],
    
    [48.60290706, 0.91221843],
    [48.60290379, 0.91220586],
    [48.60290105, 0.91219264],
    [48.60289922, 0.91217936],
    [48.6028984, 0.91216587],
    [48.60289868, 0.9121524],
    [48.60290002, 0.91213904],
    [48.60290276, 0.91212592],
    [48.60290671, 0.91211386],
    [48.6029118, 0.91210287],
    
    [48.60291817, 0.91209298],
    [48.60292536, 0.91208494],
    [48.60293324, 0.91207867],
    [48.60294177, 0.91207415],
    [48.6029505, 0.91207125],
    [48.60295943, 0.91206989],
    [48.6029684, 0.91206982],
    [48.60297736, 0.91207075],
    [48.60298621, 0.91207246],
    [48.60299522, 0.9120748],
    
    [48.603004, 0.91207764],
    [48.60301289, 0.91208091],
    [48.60302147, 0.91208442],
    [48.60303005, 0.91208822],
    [48.60303868, 0.91209218],
    [48.60304701, 0.91209625],
    [48.6030557, 0.91210067],
    [48.60306413, 0.91210497],
    [48.60307262, 0.91210946],
    [48.60308117, 0.91211399],
    
    [48.60308973, 0.91211854],
    [48.6030982, 0.91212315],
    [48.60310658, 0.91212786],
    [48.60311483, 0.9121326],
    [48.60312321, 0.91213759],
    [48.60313171, 0.91214282],
    [48.60313999, 0.91214792],
    [48.60314806, 0.912153],
    [48.60315648, 0.91215835],
    [48.60316464, 0.91216363],
    
    [48.60317306, 0.91216916],
    [48.60318118, 0.91217456],
    [48.60318926, 0.91218],
    [48.60319744, 0.91218559],
    [48.60320569, 0.91219137],
    [48.60321371, 0.91219716],
    [48.60322181, 0.91220312],
    [48.60323002, 0.91220919],
    [48.60323814, 0.91221492],
    [48.60324642, 0.9122203],
    
    [48.60325484, 0.91222486],
    [48.60326362, 0.9122282],
    [48.60327238, 0.91222986],
    [48.60328138, 0.91222948],
    [48.60329011, 0.91222672],
    [48.60329843, 0.91222176],
    [48.60330612, 0.91221474],
    [48.60331306, 0.91220601],
    [48.60331911, 0.9121962],
    [48.60332474, 0.91218522],
    
    [48.60332984, 0.91217403],
    [48.60333463, 0.91216279],
    [48.60333936, 0.91215108],
    [48.60334388, 0.91213951],
    [48.60334846, 0.91212781]
]*/

const SPEED = 18;
const LAT_LNG_SIZE = 261;
const latLngs = [
    [48.60333942, 0.91215069],
    [48.60334395, 0.91213901],
    [48.6033486, 0.91212729],
    [48.60335321, 0.91211574],
    [48.60335793, 0.91210392],
    [48.6033625, 0.91209232],
    [48.6033669, 0.91208064],
    [48.60337109, 0.91206856],
    [48.60337494, 0.91205601],
    [48.60337808, 0.91204337],
    [48.60338031, 0.91203044],
    [48.60338154, 0.91201669],
    [48.60338148, 0.91200344],
    [48.60338006, 0.91198999],
    [48.60337723, 0.91197699],
    [48.60337312, 0.9119651],
    [48.60336774, 0.9119541],
    [48.60336129, 0.91194446],
    [48.60335399, 0.91193672],
    [48.60334597, 0.91193091],
    [48.60333737, 0.91192711],
    [48.60332847, 0.91192545],
    [48.60331935, 0.91192586],
    [48.60331059, 0.9119284],
    [48.60330203, 0.91193297],
    [48.60329416, 0.91193932],
    [48.60328699, 0.9119474],
    [48.60328059, 0.91195695],
    [48.60327494, 0.9119675],
    [48.60326995, 0.91197869],
    [48.60326526, 0.91199052],
    [48.60326087, 0.9120024],
    [48.60325664, 0.91201417],
    [48.60325236, 0.91202614],
    [48.60324802, 0.9120383],
    [48.60324381, 0.9120502],
    [48.60323953, 0.91206227],
    [48.60323534, 0.91207407],
    [48.60323111, 0.91208601],
    [48.60322683, 0.91209807],
    [48.60322266, 0.91210984],
    [48.60321843, 0.91212175],
    [48.60321416, 0.91213377],
    [48.60320985, 0.91214591],
    [48.60320564, 0.91215773],
    [48.60320138, 0.91216968],
    [48.60319703, 0.91218173],
    [48.60319266, 0.91219388],
    [48.60318844, 0.91220559],
    [48.60318407, 0.91221772],
    [48.6031799, 0.91222928],
    [48.60317562, 0.9122412],
    [48.60317121, 0.91225347],
    [48.60316698, 0.91226524],
    [48.60316275, 0.91227699],
    [48.60315838, 0.91228918],
    [48.60315418, 0.91230094],
    [48.60314982, 0.91231313],
    [48.60314563, 0.91232489],
    [48.60314128, 0.91233713],
    [48.60313709, 0.91234895],
    [48.60313288, 0.91236081],
    [48.60312866, 0.91237268],
    [48.60312442, 0.9123846],
    [48.60312016, 0.9123966],
    [48.60311586, 0.9124087],
    [48.60311151, 0.91242091],
    [48.60310727, 0.91243279],
    [48.60310299, 0.91244477],
    [48.60309868, 0.91245683],
    [48.60309453, 0.91246844],
    [48.60309018, 0.91248056],
    [48.60308599, 0.91249224],
    [48.60308157, 0.91250439],
    [48.60307731, 0.91251606],
    [48.60307287, 0.91252822],
    [48.6030686, 0.9125399],
    [48.60306416, 0.91255214],
    [48.60305989, 0.9125639],
    [48.60305562, 0.91257567],
    [48.60305135, 0.91258745],
    [48.60304692, 0.9125997],
    [48.60304268, 0.91261144],
    [48.60303828, 0.91262363],
    [48.60303411, 0.91263525],
    [48.60302978, 0.91264725],
    [48.60302549, 0.91265913],
    [48.60302126, 0.91267088],
    [48.6030169, 0.91268297],
    [48.60301257, 0.91269492],
    [48.60300829, 0.91270671],
    [48.6030039, 0.9127188],
    [48.60299956, 0.91273071],
    [48.60299533, 0.91274238],
    [48.60299095, 0.91275449],
    [48.6029867, 0.91276619],
    [48.60298228, 0.9127783],
    [48.60297798, 0.91278999],
    [48.60297373, 0.91280191],
    [48.60296974, 0.91281347],
    [48.60296521, 0.91282536],
    [48.60296057, 0.91283706],
    [48.60295606, 0.91284893],
    [48.60295173, 0.91286062],
    [48.60294736, 0.91287245],
    [48.60294295, 0.91288445],
    [48.60293855, 0.91289642],
    [48.60293425, 0.91290819],
    [48.60292992, 0.91292004],
    [48.60292563, 0.91293186],
    [48.60292125, 0.91294394],
    [48.60291696, 0.91295577],
    [48.60291263, 0.91296783],
    [48.6029084, 0.91297958],
    [48.60290415, 0.91299146],
    [48.60289989, 0.91300342],
    [48.60289564, 0.91301546],
    [48.60289139, 0.91302756],
    [48.60288713, 0.9130397],
    [48.60288303, 0.91305139],
    [48.6028788, 0.91306361],
    [48.60287457, 0.91307585],
    [48.6028705, 0.91308763],
    [48.60286624, 0.91309993],
    [48.60286208, 0.91311173],
    [48.6028579, 0.91312355],
    [48.60285353, 0.91313592],
    [48.60284931, 0.91314782],
    [48.60284507, 0.91315978],
    [48.60284081, 0.91317177],
    [48.60283653, 0.91318382],
    [48.6028324, 0.9131954],
    [48.60282807, 0.91320752],
    [48.60282371, 0.91321967],
    [48.60281953, 0.91323134],
    [48.60281515, 0.91324356],
    [48.60281094, 0.91325531],
    [48.6028067, 0.91326707],
    [48.60280228, 0.91327939],
    [48.60279802, 0.91329123],
    [48.60279376, 0.91330311],
    [48.60278949, 0.91331501],
    [48.60278523, 0.91332696],
    [48.60278096, 0.91333892],
    [48.60277669, 0.91335091],
    [48.60277243, 0.9133629],
    [48.60276819, 0.91337486],
    [48.60276396, 0.91338677],
    [48.60275977, 0.91339858],
    [48.6027554, 0.9134108],
    [48.6027512, 0.9134224],
    [48.60274686, 0.91343436],
    [48.60274243, 0.9134466],
    [48.60273817, 0.91345838],
    [48.60273396, 0.91347019],
    [48.60272975, 0.91348206],
    [48.60272546, 0.91349419],
    [48.60272115, 0.91350622],
    [48.60271695, 0.91351796],
    [48.60271271, 0.91352987],
    [48.60270834, 0.9135412],
    [48.60270413, 0.91355327],
    [48.60269983, 0.91356535],
    [48.60269557, 0.91357715],
    [48.60269119, 0.91358928],
    [48.60268694, 0.91360106],
    [48.60268265, 0.91361298],
    [48.6026783, 0.91362509],
    [48.6026741, 0.91363684],
    [48.6026698, 0.91364887],
    [48.60266556, 0.91366073],
    [48.60266117, 0.91367282],
    [48.60265679, 0.91368473],
    [48.60265249, 0.91369643],
    [48.60264812, 0.91370831],
    [48.60264374, 0.91372038],
    [48.60263946, 0.91373219],
    [48.60263512, 0.91374416],
    [48.60263091, 0.91375582],
    [48.60262654, 0.91376806],
    [48.60262229, 0.91377993],
    [48.60261801, 0.9137919],
    [48.6026137, 0.91380397],
    [48.60260952, 0.91381567],
    [48.60260515, 0.91382792],
    [48.60260092, 0.91383978],
    [48.60259663, 0.91385171],
    [48.60259232, 0.9138637],
    [48.60258797, 0.91387575],
    [48.60258377, 0.91388738],
    [48.6025794, 0.91389954],
    [48.6025752, 0.91391126],
    [48.60257098, 0.91392303],
    [48.60256657, 0.91393532],
    [48.60256233, 0.91394714],
    [48.60255809, 0.91395891],
    [48.60255371, 0.9139711],
    [48.60254954, 0.91398272],
    [48.60254526, 0.91399468],
    [48.60254089, 0.91400692],
    [48.60253673, 0.91401862],
    [48.60253247, 0.91403061],
    [48.60252824, 0.91404263],
    [48.60252409, 0.91405458],
    [48.60251983, 0.91406661],
    [48.60251502, 0.91407709],
    [48.60251069, 0.914089],
    [48.60250636, 0.91410095],
    [48.60250199, 0.9141131],
    [48.60249773, 0.914125],
    [48.60249352, 0.91413676],
    [48.60248915, 0.91414895],
    [48.60248486, 0.91416094],
    [48.60248061, 0.91417285],
    [48.60247632, 0.91418493],
    [48.60247218, 0.91419659],
    [48.60246793, 0.91420862],
    [48.6024636, 0.91422092],
    [48.60245938, 0.91423296],
    [48.60245531, 0.91424464],
    [48.60245103, 0.91425691],
    [48.60244692, 0.91426877],
    [48.60244278, 0.91428069],
    [48.60243863, 0.91429267],
    [48.60243449, 0.91430468],
    [48.60243035, 0.91431674],
    [48.6024262, 0.91432878],
    [48.60242205, 0.9143408],
    [48.60241769, 0.91435324],
    [48.60241343, 0.91436503],
    [48.60240904, 0.91437668],
    [48.60240428, 0.91438855],
    [48.6023995, 0.91439962],
    [48.60239424, 0.91441073],
    [48.60238874, 0.91442134],
    [48.60238272, 0.91443179],
    [48.60237636, 0.91444156],
    [48.60236966, 0.91445056],
    [48.60236267, 0.91445877],
    [48.60235514, 0.91446651],
    [48.60234771, 0.91447335],
    [48.60233961, 0.91448025],
    [48.60233185, 0.91448678],
    [48.60232399, 0.91449364],
    [48.60231648, 0.91450091],
    [48.60230935, 0.91450857],
    [48.6023022, 0.91451732],
    [48.60229572, 0.91452676],
    [48.60228998, 0.91453687],
    [48.60228478, 0.9145482],
    [48.60228061, 0.91455996],
    [48.60227731, 0.91457271],
    [48.60227488, 0.91458593],
    [48.60227358, 0.9145993],
    [48.60227356, 0.91461283],
    [48.60227494, 0.91462615],
    [48.60227766, 0.91463897],
    [48.60228164, 0.91465106],
    [48.60228687, 0.91466208],
    [48.60229328, 0.9146716],
]

// Look for a new mission each 1 second(s). 
setInterval(function() {
    if (carState == WAITING) {        
        $.get(PATH_SEARCH, 
            false,
            handleSearchResponse, 
            'json'
        );    
    }
}, TIMER_SEARCH);

// Send state update each 2 second(s).
setInterval(function() {
    if (carState != UNAVAILABLE) {
        $.post(PATH_UPDATE,
            {
                idCar : CAR_ID,
                state: getCareState(),
                timestamp: getTimestamp(), 
                lat: getLat(), 
                lng: getLng()
            },
            handleUpdateResponse, 
            'json'
        );            
    }        
}, TIMER_UPDATE);

/**
 * todo
 * @param {*} res
 * @param {*} status 
 * @param {*} error 
 */
function handleSearchResponse(res, status, error) {      
    if (status == 'success') {
        const err = res.err;
        if (!err) {
            const mission = res.data.mission;
            const idUser = res.data.idUser;            
            doNavigate(mission, idUser);
        } else {
            //console.log('[code=' + res.data.code + ', msg='+ res.msg + ']');
        }
    } else {
        //console.log(error);
    }    
}

/**
 * todo
 * @param {*} res 
 * @param {*} status 
 * @param {*} error 
 */
function handleUpdateResponse(res, status, error) {        
    if (status == 'success') {
        const msg = res.msg;
        const data = res.data.state;

        var message = '{' + data.idCar + ', ' + data.state + ', ' + data.timestamp + ', ' + data.lat + ', ' + data.lng + '}';
        message += ' --> ';
        message += msg;

        //console.log(message);
    } else {
        //console.log(error);
    }    
}

/**
 * todo 
 */
function getCareState() {
    if (carState == NAVIGATING && latLngIndex*SPEED >= LAT_LNG_SIZE /*randomGpsCounter >= RANDOM_GPS_COUNTER_MAX*/) {
        // end navigation  
        doWait();
        return WAITING;
    } else {
        return carState;    
    }
}

/**
 * todo 
 */
function getTimestamp() {
    return new Date().getTime();
}

/**
 * todo
 */
function getLat() {
    if (carState == NAVIGATING) {
        return latLngs[latLngIndex*SPEED%LAT_LNG_SIZE][0];
    } else {
        return getRandomGps();
    }
}

/**
 * todo
 */
function getLng() {
    if (carState == NAVIGATING) {
        return latLngs[latLngIndex++*SPEED%LAT_LNG_SIZE][1];
    } else {
        return getRandomGps();
    }
}

/**
 * todo
 */
function getRandomGps() {
    randomGpsCounter++;
    const from = -180;
    const to = 180;
    const fixed = 3;
    return (Math.random() * (to - from) + from).toFixed(fixed) * 1;
    // .toFixed() returns string, so ' * 1' is a trick to convert to number
}

// todo
$("#btStart").click(function() {
    carState = WAITING;
    $("#state").text("State : Waiting...");
    $("#btStart").attr("disabled", true);
    $("#btStop").attr("disabled", false);
    $("#color1").attr("disabled", true);
    $("#color2").attr("disabled", false);
});

// todo
$("#btStop").click(function() {
    carState = UNAVAILABLE;
    $("#state").text("State : Unavailable");
    $("#btStop").attr("disabled", true);
    $("#btStart").attr("disabled", false);
    $("#color1").attr("disabled", false);
    $("#color2").attr("disabled", true);

    $.post(PATH_UPDATE,
        {
            idCar : CAR_ID,
            state: getCareState(),
            timestamp: getTimestamp(), 
            lat: getLat(), 
            lng: getLng()
        },
        handleUpdateResponse, 
        'json'
    );
});

/**
 * todo
 * @param {*} mission 
 * @param {*} idUser 
 */
function doNavigate(mission, idUser) {
    carState = NAVIGATING;
    randomGpsCounter = 0;
    latLngIndex = 0;
    $("#state").text("State : Navigating...");
    $("#mission").text("Mission : " + mission);
    $("#user").text("User : " + idUser);
    $("#color2").attr("disabled", true);
    $("#color3").attr("disabled", false);
}

/**
 * todo
 */
function doWait() {
    carState = WAITING;
    randomGpsCounter = 0;
    $("#state").text("State : Waiting...");
    $("#mission").text("Mission : N/A");
    $("#user").text("User : N/A");
    $("#btStart").attr("disabled", true);
    $("#color3").attr("disabled", true);
    $("#color2").attr("disabled", false);
}